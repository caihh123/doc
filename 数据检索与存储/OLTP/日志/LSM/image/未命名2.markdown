# Go垃圾回收
## Go1.3 mark and sweep 
### 过程 
1. 暂停程序业务逻辑，找出不可达对象和可达对象
2. 找出所有可达对象，进行标记
3. 清除所有没有标记的对象
4. 停止暂停，重复上述过程，直到程序结束
### 缺点 
1. STW，会让程序出现卡顿
2. 标记需要扫描整个heap
3. 清除碎片会产生对碎片

## Go1.5 三色标记法
### 过程 
1. 将所有节点设置为白色
2. 从根节点开始遍历，将第一层节点置为灰色
3. 将灰色节点引用的白色节点置为灰色，将此灰色节点置为黑色
4. 重复步骤3，直到没有灰色节点
5. 回收所有白色节点
### 没有STW会怎么样
1. 白色对象被黑色对象引用
2. 该白色对象与灰色对象的可达关系被破环

以上两个条件同时被丢失，会出现内存丢失问题

### 强三色不变式
不允许黑色对象引用白色对象
### 弱三色不变式
允许黑色对象引用白色对象，但白色对象的可达链路上游必须有灰色对象
### 屏障
#### 插入屏障
对象被引用触发，在A引用B对象时，B对象B标记为灰色，满足强三色不变式。结束时需要STW来重新扫描栈，标记栈上引用的白色对象的存活
#### 删除屏障
对象被删除触发，删除的对象是灰色或白色，标记该对象为灰色。一个对象被删除不会立刻被回收，在下一轮被回收，GC开始时STW扫描堆栈来记录初始快照，这个过程会保护开始时刻的所有存活对象，对整个根做一次起始快照，让所有可达对象都在灰色保护下，也就是根黑，下一级在堆上的全是灰色。
## Go1.8 三色标记法+混合写屏障 
### 过程 
1. GC开始将栈上的可达对象全部扫描并标记为黑色
2. GC期间，任何在栈上创建的新对象，均为黑色
3. 被删除的对象标记为灰色
4. 被添加的对象标记为灰色